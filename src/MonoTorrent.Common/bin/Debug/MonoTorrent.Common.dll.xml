<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obj\Debug\MonoTorrent.Common</name>
    </assembly>
    <members>
        <member name="T:MonoTorrent.Common.IBEncodedValue">
            <summary>
            Base interface for all BEncoded values.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.Encode">
            <summary>
            Encodes the BEncodedValue into a byte array
            </summary>
            <returns>Byte array containing the BEncoded Data</returns>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.Encode(System.Text.Encoding)">
            <summary>
            Encodes the BEncodedValue into a byte array
            </summary>
            <returns>Byte array containing the BEncoded Data</returns>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.Encode(System.Byte[],System.Int32)">
            <summary>
            Encodes the BEncodedValue into the supplied buffer
            </summary>
            <param name="buffer">The buffer to encode the information to</param>
            <param name="offset">The offset in the buffer to start writing the data</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.Encode(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            Encodes the BEncodedValue into the supplied buffer
            </summary>
            <param name="buffer">The buffer to encode the information to</param>
            <param name="offset">The offset in the buffer to start writing the data</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.Decode(System.IO.BinaryReader)">
            <summary>
            Decodes the data in the supplied BinaryReader into BEncodedValues
            </summary>
            <param name="reader">The StreamReader containing the data</param>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.LengthInBytes">
            <summary>
            Returns the size of the byte[] needed to encode this BEncodedValue
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.IBEncodedValue.LengthInBytes(System.Text.Encoding)">
            <summary>
            Returns the size of the byte[] needed to encode this BEncodedValue
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:MonoTorrent.Common.BEncode">
            <summary>
            Class for decoding any BEncoded material
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncode.Decode(System.Byte[])">
            <summary>
            Interface for all BEncoded values
            </summary>
            <param name="data">The byte array containing the BEncoded data</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncode.Decode(System.Byte[],System.Text.Encoding)">
            <summary>
            Decode BEncoded data in the given byte array
            </summary>
            <param name="data">The byte array containing the BEncoded data</param>
            <param name="encoding">The character encoding to use</param>
            <returns>BEncodedValue containing the data that was in the stream</returns>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.BEncode.Decode(System.Byte[],System.Int32,System.Int32)-->
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.BEncode.Decode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)-->
        <member name="M:MonoTorrent.Common.BEncode.Decode(System.IO.Stream)">
            <summary>
            Decode BEncoded data in the given stream
            </summary>
            <param name="stream">The stream containing the BEncoded data</param>
            <returns>BEncodedValue containing the data that was in the stream</returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncode.Decode(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Decode BEncoded data in the given stream
            </summary>
            <param name="stream">The stream containing the BEncoded data</param>
            <param name="encoding">The character encoding to use</param>
            <returns>BEncodedValue containing the data that was in the stream</returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncode.Decode(System.IO.BinaryReader)">
            <summary>
            Decode BEncoded data in the given BinaryReader
            </summary>
            <param name="reader">The BinaryReader containing the BEncoded data</param>
            <returns>BEncodedValue containing the data that was in the stream</returns>
        </member>
        <member name="T:MonoTorrent.Common.BEncodedDictionary">
            <summary>
            Class representing a BEncoded Dictionary
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.#ctor">
            <summary>
            Create a new BEncodedDictionary
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.Encode">
            <summary>
            Encodes the list to a byte[] using UTF8 Encoding
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.Encode(System.Text.Encoding)">
            <summary>
            Encodes the list to a byte[] using the supplied encoding
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.Encode(System.Byte[],System.Int32)">
            <summary>
            Encodes the list to a byte[] using UTF8 Encoding
            </summary>
            <param name="buffer">The buffer to encode the data to</param>
            <param name="offset">The offset to start writing the data to</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.Encode(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            Encodes the dictionary to a byte[] using the supplied encoding
            </summary>
            <param name="buffer">The buffer to encode the data to</param>
            <param name="offset">The offset to start writing the data to</param>
            <param name="e">The encoding to use</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.Decode(System.IO.BinaryReader)">
            <summary>
            Decodes a BEncodedDictionary from the supplied StreamReader
            </summary>
            <param name="reader">
            </param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.LengthInBytes">
            <summary>
            Returns the size of the dictionary in bytes using UTF8 encoding
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedDictionary.LengthInBytes(System.Text.Encoding)">
            <summary>
            Returns the size of the list in bytes using the supplied encoding
            </summary>
            <param name="e">The encoding to use</param>
            <returns>
            </returns>
        </member>
        <member name="T:MonoTorrent.Common.BEncodedList">
            <summary>
            Class representing a BEncoded list
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.#ctor">
            <summary>
            Create a new BEncoded List with default capacity
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.#ctor(System.Int32)">
            <summary>
            Create a new BEncoded List with the supplied capacity
            </summary>
            <param name="capacity">The initial capacity</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.#ctor(System.Collections.Generic.List`1[[MonoTorrent.Common.IBEncodedValue, MonoTorrent.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]])">
            <summary>
            Creates a new BEncoded list from the supplied List
            </summary>
            <param name="value">The list to use to create the BEncodedList</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.Encode">
            <summary>
            Encodes the list to a byte[] using UTF8 Encoding
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.Encode(System.Text.Encoding)">
            <summary>
            Encodes the list to a byte[] using the supplied Encoding
            </summary>
            <param name="e">The encoding to use</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.Encode(System.Byte[],System.Int32)">
            <summary>
            Encodes the list to the buffer starting at the specified index using UTF8 Encoding
            </summary>
            <param name="buffer">The buffer to encode the list to</param>
            <param name="offset">The offset to start writing the data at</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.Encode(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            Encodes the list to a byte[] using the supplied encoding
            </summary>
            <param name="buffer">The buffer to encode the list to</param>
            <param name="offset">The offset to start writing the data at</param>
            <param name="e">The encoding to use</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.Decode(System.IO.BinaryReader)">
            <summary>
            Decodes a BEncodedList from the given StreamReader
            </summary>
            <param name="reader">
            </param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.LengthInBytes">
            <summary>
            Returns the size of the list in bytes using UTF8 encoding
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedList.LengthInBytes(System.Text.Encoding)">
            <summary>
            Returns the size of the list in bytes using the supplied encoding
            </summary>
            <param name="e">The encoding to use</param>
            <returns>
            </returns>
        </member>
        <member name="T:MonoTorrent.Common.BEncodedNumber">
            <summary>
            Class representing a BEncoded number
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.#ctor(System.Int64)">
            <summary>
            Create a new BEncoded number with the given value
            </summary>
            <param name="initialValue">The inital value of the BEncodedNumber</param>
        </member>
        <member name="P:MonoTorrent.Common.BEncodedNumber.Number">
            <summary>
            The value of the BEncodedNumber
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.Encode">
            <summary>
            Encodes this number to a byte[]
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.Encode(System.Byte[],System.Int32)">
            <summary>
            Encodes this number to the supplied byte[] starting at the supplied offset
            </summary>
            <param name="buffer">The buffer to write the data to</param>
            <param name="offset">The offset to start writing the data at</param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.Decode(System.IO.BinaryReader)">
            <summary>
            Decodes a BEncoded number from the supplied BinaryReader
            </summary>
            <param name="reader">BinaryReader containing a BEncoded Number</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.LengthInBytes">
            <summary>
            Returns the length of the encoded string in bytes
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.GetHashCode">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedNumber.ToString">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:MonoTorrent.Common.BEncodedString">
            <summary>
            Class representing a BEncoded string
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor">
            <summary>
            Create a new BEncodedString using UTF8 encoding
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Text.Encoding)">
            <summary>
            Create a new BEncodedString using the supplied encoding
            </summary>
            <param name="e">The encoding to use</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Char[])">
            <summary>
            Create a new BEncodedString using UTF8 encoding
            </summary>
            <param name="value">
            </param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Char[],System.Text.Encoding)">
            <summary>
            Create a new BEncodedString using the supplied encoding
            </summary>
            <param name="value">
            </param>
            <param name="e">The encoding to use</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.String)">
            <summary>
            Create a new BEncodedString using UTF8 encoding
            </summary>
            <param name="value">Initial value for the string</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Create a new BEncodedString using the supplied encoding
            </summary>
            <param name="value">Initial value for the string</param>
            <param name="e">The encoding to use</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Byte[])">
            <summary>
            Create a new BEncodedString using UTF8 encoding
            </summary>
            <param name="value">
            </param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Byte[],System.Text.Encoding)">
            <summary>
            Create a new BEncodedString using the supplied encoding
            </summary>
            <param name="value">
            </param>
            <param name="e">The encoding to use</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Create a new BEncodedString using the supplied encoding
            </summary>
            <param name="b">The byte array containing the string</param>
            <param name="offset">The offset into the array</param>
            <param name="length">Specifies how long the string should be</param>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Create a new BEncodedString using UTF8 Encoding
            </summary>
            <param name="b">The byte array containing the string</param>
            <param name="offset">The offset into the array</param>
            <param name="lenght">Specifies how long the string should be</param>
        </member>
        <member name="P:MonoTorrent.Common.BEncodedString.Text">
            <summary>
            The value of the BEncodedString
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.BEncodedString.TextBytes">
            <summary>
            The underlying byte[] associated with this BEncodedString
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.Encode">
            <summary>
            Creates a BEncoded string representation of this string
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.Encode(System.Text.Encoding)">
            <summary>
            Creates a BEncoded string representation of this string
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.Encode(System.Byte[],System.Int32)">
            <summary>
            Encodes the BEncodedString to a byte[] using UTF8 encoding
            </summary>
            <param name="buffer">The buffer to encode the string to</param>
            <param name="offset">The offset at which to save the data to</param>
            <returns>The number of bytes encoded</returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.Encode(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            Encodes the BEncodedString to a byte[] using the supplied Encoding
            </summary>
            <param name="buffer">The buffer to encode the string to</param>
            <param name="offset">The offset at which to save the data to</param>
            <param name="e">The encoding to use</param>
            <returns>The number of bytes encoded</returns>
        </member>
        <member name="M:MonoTorrent.Common.BEncodedString.Decode(System.IO.BinaryReader)">
            <summary>
            Decodes a BEncodedString from the supplied StreamReader
            </summary>
            <param name="reader">The StreamReader containing the BEncodedString</param>
        </member>
        <member name="T:MonoTorrent.Common.Test.BEncodeTest">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.StartUp">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.AnnounceUrl">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.CreationDate">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Comment">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.CreatedBy">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.ED2K">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Encoding">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Files">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Name">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Private">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.PublisherUrl">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.PieceLength">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Publisher">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Size">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.Source">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Test.TorrentTest.SHA1">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.ToolBox.ByteMatch(System.Byte[],System.Byte[])">
            <summary>
            This method takes in two byte arrays and checks if they are equal
            </summary>
            <param name="array1">The first array</param>
            <param name="array2">The second array</param>
            <returns>True if the arrays are equal, false if they aren't</returns>
        </member>
        <member name="T:MonoTorrent.Common.Torrent">
            <summary>
            The "Torrent" class for both Tracker and Client should inherit from this
            as it contains the fields that are common to both.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Pieces">
            <summary>
            This is the array of hashes contained within the torrent.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.InfoHash">
            <summary>
            This is the infohash that is generated by putting the "Info" section of a .torrent
            through a ManagedSHA1 hasher.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.AnnounceUrls">
            <summary>
            The announce URLs contained within the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.ED2K">
            <summary>
            The optional ED2K hash contained within the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.SHA1">
            <summary>
            The optional SHA1 hash contained within the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.CreatedBy">
            <summary>
            The optional string showing who/what created the .torrent
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.CreationDate">
            <summary>
            The creation date of the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Encoding">
            <summary>
            The encoding used by the client that created the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.PublisherUrl">
            <summary>
            The Url of the publisher of either the content or the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Comment">
            <summary>
            The comment contained within the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Files">
            <summary>
            The list of files contained within the .torrent which are available for download
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Name">
            <summary>
            In the case of a single file torrent, this is the name of the file.
            In the case of a multi file torrent, it is the name of the root folder.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Size">
            <summary>
            The total size of all the files that have to be downloaded.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.IsPrivate">
            <summary>
            Shows whether DHT is allowed or not. If it is a private torrent, no peer
            sharing should be allowed.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Publisher">
            <summary>
            The name of the Publisher
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Source">
            <summary>
            The source of the .torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.PieceLength">
            <summary>
            The length of each piece in bytes.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.Nodes">
            <summary>
            FIXME: No idea what this is.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.TorrentPath">
            <summary>
            This is the path at which the .torrent file is located
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.Torrent.AzureusProperties">
            <summary>
            FIXME: No idea what this is.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.LoadTorrent(System.String)">
            <summary>
            This method loads a .torrent file from the specified path.
            </summary>
            <param name="path">The path to load the .torrent file from</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.LoadTorrent(MonoTorrent.Common.BEncodedDictionary)">
            <summary>
            This method loads the torrent information from a BEncoded dictionary
            </summary>
            <param name="torrentInformation">The dictionary from a decoded .torrent file</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.SaveTorrent(System.String,System.Boolean)">
            <summary>
            This method saves this .torrent file to the specified location
            </summary>
            <param name="path">The location to save the .torrent file to</param>
            <param name="overwrite">If true, any existing file will be overwritten</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.ProcessInfo(MonoTorrent.Common.BEncodedDictionary)">
            <summary>
            This method is called internally to load the information found within the "Info" section
            of the .torrent file
            </summary>
            <param name="dictionary">The dictionary representing the Info section of the .torrent file</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.LoadHashPieces(System.Byte[])">
            <summary>
            This method is called internally to read out the hashes from the info section of the
            .torrent file.
            </summary>
            <param name="data">The byte[]containing the hashes from the .torrent file</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.LoadTorrentFiles(MonoTorrent.Common.BEncodedList)">
            <summary>
            This method is called internally to load in all the files found within the "Files" section
            of the .torrents infohash
            </summary>
            <param name="list">The list containing the files available to download</param>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.GetEnumerator">
            <summary>
            This method returns an Enumerator so you can enumerate through the TorrentFiles
            contained within this Torrent
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.Equals(System.Object)">
            <summary>
            Two Torrent instances are considered equal if they have the same infohash
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if they are equal</returns>
        </member>
        <member name="M:MonoTorrent.Common.Torrent.GetHashCode">
            <summary>
            Returns the hashcode of the infohash byte[]
            </summary>
            <returns>int</returns>
        </member>
        <member name="T:MonoTorrent.Common.TorrentFile">
            <summary>
            This is the base class for the files available to download from within a .torrent.
            This should be inherited by both Client and Tracker "TorrentFile" classes
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentFile.#ctor(System.String,System.Int64,MonoTorrent.Common.Priority,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Class representing a file that is available for download from a .torrent file
            </summary>
            <param name="length">The length of the file in bytes</param>
            <param name="path">The filename (and path) of the file</param>
            <param name="md5">The MD5 hash of the file</param>
            <param name="ed2k">The ED2K hash of the file</param>
            <param name="sha1">The SHA1 hash of the file</param>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.Priority">
            <summary>
            The priority of this torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.Length">
            <summary>
            The length of the file in bytes
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.StartPieceIndex">
            <summary>
            The index of the first piece of this file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.EndPieceIndex">
            <summary>
            The index of the last piece of this file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.Path">
            <summary>
            In the case of a single torrent file, this is the name of the file.
            In the case of a multi-file torrent this is the relative path of the file
            (including the filename) from the base directory
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.MD5">
            <summary>
            The MD5 hash of the file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.ED2K">
            <summary>
            The ED2K hash of the file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentFile.SHA1">
            <summary>
            The SHA1 hash of the file
            </summary>
        </member>
        <member name="T:MonoTorrent.Common.TorrentReader">
            <summary>
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentReader.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            </summary>
            <param name="path">
            </param>
            <param name="mode">
            </param>
            <param name="access">
            </param>
            <param name="share">
            </param>
        </member>
        <member name="M:MonoTorrent.Common.TorrentReader.PeekChar">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.TorrentReader.ReadByte">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.TorrentReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="array">
            </param>
            <param name="offset">
            </param>
            <param name="count">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:MonoTorrent.Common.TorrentReader.Dispose">
            <summary>
            </summary>
        </member>
        <member name="F:MonoTorrent.Common.VersionInfo.ProtocolStringV100">
            <summary>
            Protocol string for version 1.0 of Bittorrent Protocol
            </summary>
        </member>
        <member name="F:MonoTorrent.Common.VersionInfo.ClientVersion">
            <summary>
            The current version of the client
            </summary>
        </member>
        <member name="T:MonoTorrent.Common.TorrentCreator">
            <summary>
            this class is used to create on disk torrent files.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.Path">
            <summary>the path from which you would like to make a torrent of.
            path can be a file and a directory.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.PieceLength">
            <summary>
            this property sets the length of the pieces. default is 512 kb.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.Comment">
            <summary>
            this property sets the comment entry in the torrent file. default is string.Empty to conserve bandwidth.
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.CreatedBy">
            <summary>this property sets the created by entrie in the torrent file
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.StoreCreationDate">
            <summary>this property sets wheather the optional field creation date should be included
            in the torrent or not. default is false to conserve bandwidth. </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.StoreMD5">
            <summary>this property sets wheather the optional field md5sum should be included.
            default is false to conserve bandwidth
            </summary>
        </member>
        <member name="P:MonoTorrent.Common.TorrentCreator.StoreUTF8">
            <summary>
            this property instructs the creator to use add utf8 strings
            default value is false to conserve bandwidth.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.GetSize">
            <summary>
            returns the size of bytes required by the torrents with the current set properties.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.AddAnnounce(System.String)">
            <summary>
            this method adds an announce url to the list of announce urls.
            if the list contains more than one entries the announce list is used
            to store the list of announce urls.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.RemoveAnnounce(System.String)">
            <summary>
            removes an url from the list
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.AddCustom(System.Collections.Generic.KeyValuePair`2[[MonoTorrent.Common.BEncodedString, MonoTorrent.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[MonoTorrent.Common.IBEncodedValue, MonoTorrent.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]])">
            <summary>
            This can be used to add Custom Values to the Torrent. This may be used to add" httpseeds"
            to the Torrent.
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.RemoveCustom">
            <summary>This removes the Custom Values from the Torrent.
            </summary>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.TorrentCreator.Create(System.String)-->
        <member name="M:MonoTorrent.Common.TorrentCreator.CreateDict">
            <summary>
            creates an BencodedDictionary.
            </summary>
            <returns>a BDictionary representing the torrent</returns>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.CreateMultiFileTorrent">
            <summary>
            used for creating multi file mode torrents.
            </summary>
            <returns>the dictionary representing which is stored in the torrent file</returns>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.TorrentCreator.CreateSingleFileTorrent-->
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.TorrentCreator.AddAllFileInfoDicts(System.String,MonoTorrent.Common.BEncodedList,System.Collections.Generic.List`1[[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]])-->
        <member name="M:MonoTorrent.Common.TorrentCreator.GetFileInfoDict(System.String,System.String)">
            <summary>
            this method is used for multi file mode torrents to return a dictionary with
            file relevant informations.
            <param name="file">the file to report the informations for</param><param name="basePath">used to subtract the absolut path information</param></summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.AddCommonStuff(MonoTorrent.Common.BEncodedDictionary)">
            <summary>
            this adds stuff common to single and multi file torrents
            </summary>
        </member>
        <member name="M:MonoTorrent.Common.TorrentCreator.AddMD5(MonoTorrent.Common.BEncodedDictionary,System.String)">
            <summary>calculate md5sum of a file</summary>
            <param name="fileName">the file to sum with md5</param>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.TorrentCreator.CalcPiecesHash(System.Collections.Generic.List`1[[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]])-->
        <!--FIXME: Invalid documentation markup was found for member M:MonoTorrent.Common.TorrentCreator.AddString(MonoTorrent.Common.BEncodedDictionary,System.String,System.String)-->
        <!--FIXME: Invalid documentation markup was found for member T:MonoTorrent.Common.CatStreamReader-->
    </members>
</doc>
